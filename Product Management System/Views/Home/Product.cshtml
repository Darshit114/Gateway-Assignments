@model Product_Management_System.Models.ProductViewModel

@if (Session["Id"] != null)
{

    <h2>Product</h2>


    <form id="productRegister" method="POST" enctype="multipart/form-data">

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ProductViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Category, new SelectList(Enum.GetValues(typeof(Product_Management_System.Models.ProductsCategory))), "Select Category", new { @id = "category" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @id = "quantity" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea class="form-control" id="shortText" rows="6"></textarea>
                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea class="form-control" id="longText" rows="15"></textarea>
                    @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.smallImgFile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.smallImgFile, new { type = "file", placeholder = Html.DisplayNameFor(m => m.smallImgFile), @class = "form-control-file", @id = "smallImg", @name = "smallImg" })
                    @Html.ValidationMessageFor(model => model.smallImgFile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.largeImgFile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.largeImgFile, new { type = "file", placeholder = Html.DisplayNameFor(m => m.largeImgFile), @class = "form-control-file", @id = "largeImg", @name = "largeImg" })
                    @Html.ValidationMessageFor(model => model.largeImgFile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" id="productSubmit" value="Create" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </div>
    </form>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @Scripts.Render("~/bundles/producthelper")

        @Scripts.Render("~/bundles/productlisthandler")
    }

}
else
{
    @section Scripts {

        <script>
            $(document).ready(function () {

                window.location.href = '/Home/Login';

            });
        </script>

    }
}

